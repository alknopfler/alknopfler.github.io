<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>performance on Alknopfler&#39;s Site</title>
    <link>https://alknopfler.github.io/categories/performance/</link>
    <description>Recent content in performance on Alknopfler&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 18 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://alknopfler.github.io/categories/performance/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Improve the Libvirt Performance</title>
      <link>https://alknopfler.github.io/post/improve-libvirt-performance/</link>
      <pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/improve-libvirt-performance/</guid>
      <description>The Problem: When you&amp;rsquo;re using having performance issues with libvirt, you can try this to improve it. The idea is use an specific configuration to improve the performance. This configuration is the creation of a new volume mounted in the /var/lib/libvirt/images directory.
It&amp;rsquo;s possible to use the same root volume for all the images, but it&amp;rsquo;s not recommended due to a performance issues.
The Solution: dev=&amp;#34;nvme0n1&amp;#34; # The device to use vg=&amp;#34;vg1&amp;#34; lv=&amp;#34;lv1&amp;#34; mountpoint=&amp;#34;/var/lib/libvirt/images&amp;#34; pvcreate /dev/$dev # Create the physical volume vgcreate $vg /dev/$(basename $dev) # Create the volume group lvcreate -l 100%FREE -n $lv $vg # 100% of the free space mkfs.</description>
    </item>
    
  </channel>
</rss>
