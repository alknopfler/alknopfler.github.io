<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Alknopfler&#39;s Site</title>
    <link>https://alknopfler.github.io/post/</link>
    <description>Recent content in Posts on Alknopfler&#39;s Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 27 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://alknopfler.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang Fanin - Fanout  Reading 10k files in seconds</title>
      <link>https://alknopfler.github.io/post/golang-fanin-fanout-reading-10k-files-in-seconds/</link>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/golang-fanin-fanout-reading-10k-files-in-seconds/</guid>
      <description>Sometimes you&amp;rsquo;ve got some tasks which consume a lot of time to be processed, for instance, the invoice generation for a big company, NLP tasks, or any file processing tasks you could imagine.
Golang has a powerful feature known by all, based on goroutines (concurrency) and channels (messaging) that define totally the Fanin - Fanout pattern.
The main idea is to paralelize jobs based on I/O and CPU execution doing the next tasks, but using the concurrency to launch severals goroutines to paralize the execution flow:</description>
    </item>
    
    <item>
      <title>Scheduling shutdown aws EC2 at night - Golang &amp; gitlab-ci schedule job</title>
      <link>https://alknopfler.github.io/post/scheduling-shutdown-aws-ec2-at-night-golang-gitlab-ci-schedule-job/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/scheduling-shutdown-aws-ec2-at-night-golang-gitlab-ci-schedule-job/</guid>
      <description>When you&amp;rsquo;re working with AWS sometimes you need to keep in your mind to shutdown at night the instances in order to avoid unexpected costs at the end of the month. Obviously you could do it manually but, I will offer a very simple way to do that automatically directly running a code using just a gitlab-ci pipeline.
The main components are:
 Golang code to connect to your aws account and stop the instances which are running Gitlab-ci pipeline but using and scheduled job to automate at night the script execution  Golang code: package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.</description>
    </item>
    
    <item>
      <title>Cómo afrontar el reto de ganar a la mente</title>
      <link>https://alknopfler.github.io/post/como-afrontar-el-reto-de-ganar-a-la-mente/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/como-afrontar-el-reto-de-ganar-a-la-mente/</guid>
      <description>El ser humano siempre está en búsqueda en mayor o menor medida de nuevos retos. La mente humana se alimenta de retos, y al igual que ocurre con las personas, existen personas que necesitan una mayor cantidad de retos para poder satisfacer su hambre, y por el contrario, existen otras que viven perfectamente aceptando solo los retos justos para satisfacer sus necesidades básicas.
Como siempre digo, cuando tienes una mente inquieta, el cerebro es tu peor enemigo. Siempre se encuentra haciéndote challenge constantemente, cuestionando lo que parece cerrado, generando dudas en la toma de decisiones, ampliando la red neuronal para imaginar posibles situaciones altamente improbables.</description>
    </item>
    
    <item>
      <title>Principio de Excelencia</title>
      <link>https://alknopfler.github.io/post/principio-de-excelencia/</link>
      <pubDate>Fri, 14 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/principio-de-excelencia/</guid>
      <description>Durante mi carrera profesional, de forma bastante inconsciente he ido pasando por diferentes compañías, aprendiendo y aportando a su cultura, aprendiendo mucho de la forma de trabajar en la compañía, aprendiendo de los profesionales muchas facetas para completar mi perfil y mejorar día a día intentando ser un buen profesional y mejor persona.
Como fruto de ese aprendizaje creo que se ha fraguado en mi perfil un axioma que lo he bautizado como “Principio de Excelencia”. Seguramente sea algo obvio para muchas personas, o bien, sea llamado de otras muchas formas, pero es algo que durante el último año me he propuesto fomentar y que sea algo que allá donde vaya intentaré ofrecer como valor personal para la compañía.</description>
    </item>
    
    <item>
      <title>Alexa Skills with Golang</title>
      <link>https://alknopfler.github.io/post/alexa-skills-with-golang/</link>
      <pubDate>Sun, 04 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/alexa-skills-with-golang/</guid>
      <description>Few weeks ago, I wrote a post about my personal project for a Security Home Alarm System based on Golang, Raspberry PI and 433Mhz sensors ( see again here ).
After that, I thought that the next step for that project could be an Alexa Skill integration, in order to control and manage the Alarm System just with my voice.
This week, I bought a new Amazon Echo Dot, and today, the new functionality is ready to share with all of you ;)</description>
    </item>
    
    <item>
      <title>Send Notifications with this Go project (Sms &amp; Email) based on AWS SES/SNS</title>
      <link>https://alknopfler.github.io/post/send-notifications-go-package-sms-emai-based-on-aws-ses-sns/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/send-notifications-go-package-sms-emai-based-on-aws-ses-sns/</guid>
      <description>The notificationApp is an open source project based on Go in order to send notifications by different channels (by email, sms, etc&amp;hellip;) using the AWS SNS and AWS SES services. One of the main features of the project, is the possibility to create templates based on places holders (for instance, {{.CustomData.Name}}) and store that template in the database to be used after that by the notification endpoint.
Created by Alknopfler in https://github.com/alknopfler/notificationapp
Features  Templates based on places holder {{.CustomData.XXXX}} Templates Management (Create, Retrieve, and Delete) Templates store based on 3 params:  Template Id Channel (sms, email, and so on&amp;hellip;) Language   Multi-channel and Multi-recipient features (The NotificationsApp is able to send to severals users with different channels) Send Notifications to users using SNS and SES services (AWS services) Custom the message using Custom Data values to replace in the template placesholder API to use all the features  Architecture</description>
    </item>
    
    <item>
      <title>Design your own Home Alarm System using Go</title>
      <link>https://alknopfler.github.io/post/design-your-own-home-alarm-system-using-go/</link>
      <pubDate>Sat, 29 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/design-your-own-home-alarm-system-using-go/</guid>
      <description>AlkAlarm is a open source project created to get ready a home Alarm System in few minutes using Golang. In the market you will buy a home system alarm based on 433Mhz sensors and using GSM modules to send the notifications like: 
The main idea of this project is based on the same kind of Alarm GSM systems, but in this case, we only have to buy the sensors and sirens, because:
 the main controller, and gsm module will be made with the raspberry (physically) the AlkAlarm code of this repo will be installed on raspberry and it will be the brain of raspberry Alarm System Sensor bought will be generic 433Mhz and will be added to the raspberry using a 433mhz receptor.</description>
    </item>
    
    <item>
      <title>Infrastructure as code</title>
      <link>https://alknopfler.github.io/post/infrastructure-as-code/</link>
      <pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/infrastructure-as-code/</guid>
      <description>During my career, I&amp;rsquo;m always looking for new technologies as well as looking for the way to improve the infrastructure as we know nowadays.
I&amp;rsquo;ve been working with infrastructure as code for a long time, using code to deploy and manage infrastructure. Some people, ask me a lot of questions about the concept infrastructure as code.
Infrastructure as code, or programmable infrastructure, means writing code (which can be done using a high level language or any descriptive language) to manage configurations and automate provisioning of infrastructure in addition to deployments.</description>
    </item>
    
    <item>
      <title>New features in Openstack CEPH</title>
      <link>https://alknopfler.github.io/post/new-features-in-openstack-ceph/</link>
      <pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/new-features-in-openstack-ceph/</guid>
      <description>In my opinion, this video shows all the new features that the openstackers were usually asking for the project roadmap for several years:
https://youtu.be/NqOFWGUvA9A</description>
    </item>
    
    <item>
      <title>Working with Microservices</title>
      <link>https://alknopfler.github.io/post/working-with-microservices/</link>
      <pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/working-with-microservices/</guid>
      <description>During my professional career, I&amp;rsquo;ve been working with microservices for a long time, and I would like to share with you the experiences and knowledge that I&amp;rsquo;ve learnt working with them.
At the beginning, the first contact with microservice is like a piece of cake, but when you are getting deep under the hood, sometimes, you will be able to find some commons problems that you could solve just preparing your mind, your application and your infrastructure to be successfull in your tasks.</description>
    </item>
    
    <item>
      <title>GoDataberus - Database Driver API in Golang</title>
      <link>https://alknopfler.github.io/post/godataberus-database-driver-api-in-golang/</link>
      <pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/godataberus-database-driver-api-in-golang/</guid>
      <description>GoDataberus is a &amp;ldquo;Database Driver API&amp;rdquo; in order to reduce the complexity of the CRUD operations in some common databases. The idea is to use Databerus in order to connect to a external DB (using an available DB driver) using the same API independently of the database
Architecture GoDataberus has been developed in Golang and contains:
 Connection Redis store: Redis to store the database&amp;rsquo;s connection data. It return an uuid to use in the following api calls. The connection data could be a local database, external cloud provider, or whatever.</description>
    </item>
    
    <item>
      <title>GoLogger - Module to Log with formatting in Golang</title>
      <link>https://alknopfler.github.io/post/gologger-module-to-log-with-formatting-in-golang/</link>
      <pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/gologger-module-to-log-with-formatting-in-golang/</guid>
      <description>GoLogger is a logger module for golang based on logrus module. This module was created to reduce the logrus abstraction in order to use just 2 functions:
 Init() : initialize the logrus params Print(): Print an error with the base fields  Usage:
Import package
import ( &amp;#34;github.com/alknopfler/Gologger/gologger&amp;#34; ) Init with stdout and info level:
gologger.Init(os.Stdout, logrus.InfoLevel) Print to show the error message:
gologger.Print(&amp;#34;WARN&amp;#34;,7,&amp;#34;Description to show&amp;#34;,&amp;#34;filename.go&amp;#34;) </description>
    </item>
    
    <item>
      <title>Gocypherator - Module to cypher string in Golang easily</title>
      <link>https://alknopfler.github.io/post/gocypherator-module-to-cypher-string-in-golang-easily/</link>
      <pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/gocypherator-module-to-cypher-string-in-golang-easily/</guid>
      <description>Gocypherator is a cypher module in order to encrypt / decrypt strings based on the following algorithms:
 AES-128, AES-192, or AES-256.  Usage:
First of all, you need to import the module:
import &amp;#34;github.com/alknopfler/gocypherator/cypher&amp;#34; Then you have to initialize the cypher module with the type of algorithm:
func InitKeyCypher(cypherType int) { cypherType could be:
 16 ==&amp;gt; AES 128 24 ==&amp;gt; AES 192 32 ==&amp;gt; AES 256  The following example shows all the features available:
func main (){ var cypherType = 16 var baseText = &amp;#34;helloWorld&amp;#34; fmt.</description>
    </item>
    
    <item>
      <title>Deploy Openstack in containers on top of Kubernetes</title>
      <link>https://alknopfler.github.io/post/deploy-openstack-in-containers-on-top-of-kubernetes/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/deploy-openstack-in-containers-on-top-of-kubernetes/</guid>
      <description>Based on my repo in github: Openstack-k8s: Openstack Kubernetes deployment
This Project is being developed in order to facilitate the Openstack deployment based on Kubernetes and docker containers. The openstack distribution is based on the upstream code, and you can deploy a specific openstack version changing the &amp;ldquo;version&amp;rdquo; param in the dockerfile for each Openstack service. The project requires kubernetes and uses Rancher to deploy the k8s cluster faster.
Requirements:  A k8s cluster ready is needed to deploy all the services (including the Etcd service) A DNS services is needed to resolve the k8s services name  Features:  Fast Openstack release upgrade: version is parameterized in Dockerfiles getting the code directly from upstream.</description>
    </item>
    
    <item>
      <title>Open Source is a Cultural change</title>
      <link>https://alknopfler.github.io/post/open-source-is-a-cultural-change/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://alknopfler.github.io/post/open-source-is-a-cultural-change/</guid>
      <description>Few months ago, I attended to an international OpenSource Event in Madrid in order to discuss, as an Engineer at BBVA, with other collegues (from other kind of companies) about the open source and the relevance of that philosophy for enterprises to change the culture to be more agile.
Get access to the full interview article
&amp;ldquo;Open source is a cultural change&amp;rdquo; Alberto Morgante, Cloud Computing Innovation Engineer at BBVA, talks about the current boom in open source. One of the key benefits of these tools, he says, is their capacity to streamline processes.</description>
    </item>
    
  </channel>
</rss>
